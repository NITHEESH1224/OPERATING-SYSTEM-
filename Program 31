#include <stdio.h>

#define MAX_FRAMES 3
#define MAX_PAGES 10

void printPageFault(int page, int frame, int pages[MAX_FRAMES]) {
    printf("Page %d loaded into Frame %d: [", page, frame);
    for (int i = 0; i < MAX_FRAMES; ++i) {
        if (i == frame) {
            printf("%d*", pages[i]);
        } else {
            printf("%d", pages[i]);
        }

        if (i < MAX_FRAMES - 1) {
            printf(", ");
        }
    }
    printf("]\n");
}

int main() {
    int frames[MAX_FRAMES] = {-1, -1, -1};
    int pages[MAX_PAGES] = {0, 1, 2, 3, 2, 4, 5, 3, 4, 6};
    int pageFaults = 0;
    int frameIndex = 0;

    printf("FIFO Page Replacement Simulation\n\n");

    for (int i = 0; i < MAX_PAGES; ++i) {
        int page = pages[i];
        int pageFound = 0;

        // Check if the page is already in a frame
        for (int j = 0; j < MAX_FRAMES; ++j) {
            if (frames[j] == page) {
                pageFound = 1;
                break;
            }
        }

        // If page not found, replace the oldest page in the frame
        if (!pageFound) {
            frames[frameIndex] = page;
            printPageFault(page, frameIndex, frames);
            frameIndex = (frameIndex + 1) % MAX_FRAMES; // Move to the next frame in a circular manner
            pageFaults++;
        }
    }

    printf("\nTotal Page Faults: %d\n", pageFaults);

    return 0;
}
